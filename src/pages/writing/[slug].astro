---
// In: src/pages/writing/[slug].astro
import { sanityClient } from "../../lib/sanity";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { PortableText } from "astro-portabletext"; // Componente per renderizzare il testo ricco

// 1. getStaticPaths ora chiede a Sanity quali pagine creare
export async function getStaticPaths() {
  const query = `*[_type == "post" && defined(slug.current)]{"slug": slug.current}`;
  const posts = await sanityClient.fetch(query);

  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;

// 2. Prendiamo i dati del singolo post corrispondente allo slug
const singlePostQuery = `*[_type == "post" && slug.current == $slug][0]`;
const post = await sanityClient.fetch(singlePostQuery, { slug });

if (!post) {
  return Astro.redirect("/404"); // Se il post non esiste, reindirizza
}
---

<BaseLayout title={post.title}>
  <div class="container mx-auto px-4 py-12">
    {/* Link per tornare indietro */}
    <nav class="mb-6">
      <a href="/writing" class="text-blue-600 hover:underline">‚Üê Torna al Blog</a>
    </nav>

    <article>
      <h1 class="text-4xl md:text-5xl font-bold mb-4">{post.title}</h1>
      <p class="text-gray-600 mb-8">
        Pubblicato il: {new Date(post.publishedAt).toLocaleDateString('it-IT')}
      </p>

      {/* 3. Usiamo PortableText per renderizzare il contenuto dall'editor di Sanity */}
      <div class="prose lg:prose-xl max-w-none">
        <PortableText value={post.body} />
      </div>
    </article>
  </div>
</BaseLayout>
