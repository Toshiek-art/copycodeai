---
import BaseLayout from '../layouts/BaseLayout.astro';

// evita crash se la env manca
const turnstileSiteKey = import.meta.env.TURNSTILE_SITE_KEY ?? '';
---
<BaseLayout title="Contact Me">
  {/* DEBUG: lasciami questo H1 per capire subito se rende */}
  <div class="container mx-auto px-4 py-16">
    <h1 class="text-4xl font-bold mb-6">Contact — should render</h1>

    <form id="contact-form" class="max-w-2xl mx-auto space-y-6">
      <div id="form-result" class="hidden"></div>

      <div>
        <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
        <input id="name" name="name" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" />
      </div>

      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
        <input id="email" type="email" name="email" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" />
      </div>

      <div>
        <label for="message" class="block text-sm font-medium text-gray-700">Message</label>
        <textarea id="message" name="message" rows="4" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm"></textarea>
      </div>

      {/* Turnstile widget: se la key non c'è, mostra un hint ma NON crasha */}
      {turnstileSiteKey
        ? <div class="cf-turnstile" data-sitekey={turnstileSiteKey}></div>
        : <p class="text-sm text-amber-600">TURNSTILE_SITE_KEY mancante (solo dev hint)</p>}

      <button id="submit-btn" type="submit" class="bg-blue-600 text-white font-bold py-3 px-8 rounded-lg hover:bg-blue-700 transition-colors text-lg disabled:bg-gray-400">
        Send Message
      </button>
    </form>
  </div>

  {/* Script SOLIDO: parte solo quando il DOM è pronto, niente TS casts */}
  <script type="module">
    // carica Turnstile (non blocca render)
    const s = document.createElement('script');
    s.src = 'https://challenges.cloudflare.com/turnstile/v0/api.js';
    s.async = true; s.defer = true;
    document.head.appendChild(s);

    window.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contact-form');
      const formResult = document.getElementById('form-result');
      const submitBtn = document.getElementById('submit-btn');
      if (!form || !formResult || !submitBtn) return;

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        submitBtn.disabled = true;
        submitBtn.textContent = 'Sending...';
        formResult.className = 'hidden';

        try {
          const fd = new FormData(form);
          if (!fd.get('cf-turnstile-response') && window.turnstile?.getResponse) {
            const token = window.turnstile.getResponse();
            if (token) fd.set('cf-turnstile-response', token);
          }

          const res = await fetch('/api/send-email', { method: 'POST', body: fd });
          const payload = await res.json().catch(() => ({}));
          if (res.ok && payload.ok) {
            formResult.className = 'p-4 mb-6 text-green-800 bg-green-100 border border-green-200 rounded-lg';
            formResult.textContent = 'Thank you! Your message has been sent successfully.';
            form.reset();
          } else {
            throw new Error(payload.error || `Failed with status ${res.status}`);
          }
        } catch (err) {
          formResult.className = 'p-4 mb-6 text-red-800 bg-red-100 border border-red-200 rounded-lg';
          formResult.textContent = (err && err.message) || 'Something went wrong.';
        } finally {
          submitBtn.disabled = false;
          submitBtn.textContent = 'Send Message';
          window.turnstile?.reset?.();
        }
      });
    });
  </script>
</BaseLayout>
