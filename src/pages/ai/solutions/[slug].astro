---
export const prerender = true;

// In: src/pages/ai/solutions/[slug].astro
import { sanityClient } from "../../../lib/sanity";
import SiteLayout from "@core/layouts/SiteLayout.astro";
import { PortableText } from "astro-portabletext";
import { Image } from "astro:assets";

function getSanityImageUrl(sanityImage: any) {
  if (!sanityImage || !sanityImage.asset) return null;
  const ref = sanityImage.asset._ref;
  const [_type, assetId, dimensions, format] = ref.split('-');
  return `https://cdn.sanity.io/images/1avzsmsi/production/${assetId}-${dimensions}.${format}`;
}

export async function getStaticPaths() {
  const query = `*[_type == "aiSolution" && defined(slug.current)]{"slug": slug.current}`;
  const solutions = await sanityClient.fetch(query);
  return solutions.map((solution) => ({
    params: { slug: solution.slug },
  }));
}

const { slug } = Astro.params;
const SITE = "https://copycodeai-bki.pages.dev";
const singleSolutionQuery = `*[_type == "aiSolution" && slug.current == $slug][0]`;
const solution = await sanityClient.fetch(singleSolutionQuery, { slug });

if (!solution) return Astro.redirect("/404");

const mainImageUrl = getSanityImageUrl(solution.mainImage);
const description = solution.summary ?? "Case study AI sviluppato per CopyCodeAI.";
const url = `${SITE}/ai/solutions/${slug}`;
---

<SiteLayout title={solution.title} description={description} url={url}>
  <div class="container mx-auto px-4 py-12">
    <nav class="mb-6" data-aos="fade-right">
      <button
        onclick="history.back()"
        class="flex items-center gap-2 text-blue-600 hover:underline"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
        </svg>
        <span>Go Back</span>
      </button>
    </nav>

    <article class="space-y-10">
      <header>
        <h1 class="text-4xl font-bold md:text-5xl">{solution.title}</h1>
        <p class="mt-3 max-w-3xl text-lg text-[var(--muted)]">{solution.summary}</p>
      </header>

      {mainImageUrl && solution.solutionType !== 'visual' && (
        <div class="rounded-lg border border-black/5 bg-[var(--surface)] p-4 dark:border-white/10" data-aos="fade-up" data-aos-delay="100">
          <Image
            src={mainImageUrl}
            alt={`Featured image for ${solution.title}`}
            width={1200}
            height={675}
            class="h-auto w-full rounded-md shadow-lg"
          />
        </div>
      )}

      <section class="grid gap-8 md:grid-cols-[1fr_1.2fr]" data-aos="fade-up" data-aos-delay="150">
        <div>
          <h2 class="text-2xl font-semibold">The Challenge</h2>
          <p class="mt-3 text-[var(--muted)]">{solution.challenge}</p>
        </div>
        <div class="prose max-w-none lg:prose-lg dark:prose-invert">
          <h2 class="text-2xl font-semibold">My Solution</h2>
          <PortableText value={solution.solution} />
        </div>
      </section>

      {solution.solutionType === 'case-study' && solution.promptAnatomy && (
        <section class="space-y-6 rounded-lg border border-blue-500/20 bg-blue-500/5 p-6" data-aos="fade-up" data-aos-delay="200">
          <h3 class="text-2xl font-semibold">Prompt Anatomy</h3>
          <div class="space-y-6">
            {solution.promptAnatomy.map((block, index) => (
              <div class="border-l-4 border-blue-500 pl-4" data-aos="fade-up" data-aos-delay={250 + index * 80}>
                <h4 class="text-lg font-semibold">{block.conceptTitle}</h4>
                <p class="mt-2 text-sm text-[var(--muted)]">{block.reasoning}</p>
                {block.promptSnippet && (
                  <pre class="mt-3 overflow-x-auto rounded-md bg-slate-900 p-3 text-xs text-white"><code>{block.promptSnippet}</code></pre>
                )}
              </div>
            ))}
          </div>
        </section>
      )}

      {solution.solutionType === 'visual' && solution.gallery && (
        <section data-aos="fade-up" data-aos-delay="200">
          <h3 class="text-2xl font-semibold">Image Gallery</h3>
          <div class="mt-6 grid grid-cols-1 gap-6 md:grid-cols-2">
            {solution.gallery.map((image, index) => {
              const imageUrl = getSanityImageUrl(image);
              return imageUrl ? (
                <figure class="rounded-lg border border-black/5 bg-[var(--surface)] p-4 shadow-sm dark:border-white/10" data-aos="zoom-in" data-aos-delay={220 + index * 80}>
                  <Image
                    src={imageUrl}
                    alt={image.caption || 'AI-generated image'}
                    width={800}
                    height={600}
                    class="h-auto w-full rounded-md"
                  />
                  {image.caption && (
                    <figcaption class="mt-3 text-center text-sm text-[var(--muted)]">{image.caption}</figcaption>
                  )}
                </figure>
              ) : null;
            })}
          </div>
        </section>
      )}

      {solution.projectUrl && (
        <div class="text-center" data-aos="zoom-in" data-aos-delay="250">
          <a
            href={solution.projectUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-block rounded-lg bg-blue-600 px-6 py-3 font-semibold text-white transition hover:bg-blue-700"
          >
            Visita il Sito Demo
          </a>
        </div>
      )}
    </article>
  </div>
</SiteLayout>
