{
  "version": 3,
  "sources": ["../bundle-aJFXMH/checked-fetch.js", "../../../functions/api/templates/%5Bslug%5D/demos.ts", "../../../functions/api/templates/%5Bslug%5D.ts", "../../../functions/api/ping.ts", "../../../node_modules/resend/dist/index.mjs", "../../../functions/api/send-email.ts", "../../../functions/api/templates/index.ts", "../../../functions/admin/_debug.ts", "../../../functions/admin/login.ts", "../../../functions/admin/logout.ts", "../../../functions/health.ts", "../../../functions/_middleware.ts", "functionsRoutes-0.666067956300989.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-aJFXMH/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-aJFXMH/middleware-loader.entry.ts"],
  "sourceRoot": "/home/tosiek/copycodeai/.wrangler/tmp/pages-9pJGdt/functionsWorker-0.6797441427345337.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "const send=(d:unknown,s=200)=>new Response(JSON.stringify(d),{status:s,headers:{'content-type':'application/json'}});\n\n// GET /api/templates/:slug/demos?limit=50\nexport const onRequestGet: PagesFunction = async ({ env, params, request }) => {\n  try {\n    const DB=(env as any)?.DB as D1Database; if(!DB) return send({error:\"D1 binding 'DB' missing\"},500);\n    const slug=String(params?.slug||\"\");\n    const url=new URL(request.url);\n    const limitRaw=parseInt(url.searchParams.get(\"limit\")||\"50\",10);\n    const limit=Number.isNaN(limitRaw)?50:Math.min(Math.max(limitRaw,1),200);\n    const { results } = await DB.prepare(\n      \"SELECT id, payload, result, created_at FROM demos WHERE template_slug=?1 ORDER BY id DESC LIMIT ?2\"\n    ).bind(slug, limit).all();\n    return send(results??[]);\n  } catch(e:any){\n    return send({error:\"Unhandled error (GET demos)\", detail:String(e?.message||e)},500);\n  }\n};\n\n// POST /api/templates/:slug/demos\nexport const onRequestPost: PagesFunction = async ({ env, params, request }) => {\n  try {\n    const DB=(env as any)?.DB as D1Database; if(!DB) return send({error:\"D1 binding 'DB' missing\"},500);\n    const templateSlug=String(params?.slug||\"\");\n\n    // verifica esistenza template\n    const exists=await DB.prepare(\"SELECT 1 FROM templates WHERE slug=?1\").bind(templateSlug).first();\n    if(!exists) return send({error:\"Template not found\"},404);\n\n    // body opzionale; nel tuo schema client_email ed expires_at sono NOT NULL\n    let body:any; try{ body=await request.json(); } catch{ body=null; }\n\n    const clientEmail=(typeof body?.client_email===\"string\" && body.client_email.trim()) || \"anon@local\";\n    let expiresAt:string;\n    if(typeof body?.expires_at===\"string\" && body.expires_at.trim()){\n      expiresAt=body.expires_at.trim();\n    } else {\n      const d=new Date(Date.now()+24*60*60*1000);\n      expiresAt=d.toISOString();\n    }\n\n    const payload=body?JSON.stringify(body):\"{}\";\n\n    const res=await DB.prepare(\n      \"INSERT INTO demos (template_slug, client_email, expires_at, payload, result, created_at) VALUES (?1, ?2, ?3, ?4, NULL, strftime('%Y-%m-%dT%H:%M:%fZ','now'))\"\n    ).bind(templateSlug, clientEmail, expiresAt, payload).run();\n\n    return send({ok:true, template_slug: templateSlug, demo_id: res.meta.last_row_id},201);\n  } catch(e:any){\n    return send({error:\"Unhandled error (POST demo)\", detail:String(e?.message||e)},500);\n  }\n};\n", "const send = (data: unknown, status = 200) =>\n  new Response(JSON.stringify(data), { status, headers: { \"content-type\": \"application/json\" } });\n\nexport const onRequestGet: PagesFunction = async ({ env, params }) => {\n  try {\n    const DB = (env as any)?.DB as D1Database;\n    if (!DB) return send({ error: \"D1 binding 'DB' missing\" }, 500);\n    const slug = String(params?.slug || \"\");\n\n    const row = await DB.prepare(\n      \"SELECT slug, title, body, meta, project_name, subdomain, status, created_at, updated_at FROM templates WHERE slug=?1\"\n    ).bind(slug).first();\n    return row ? send(row) : send({ error: \"Not found\" }, 404);\n  } catch (e: any) {\n    return send({ error: \"Unhandled error (GET one)\", detail: String(e?.message || e) }, 500);\n  }\n};\n\nexport const onRequestPatch: PagesFunction = async ({ env, params, request }) => {\n  try {\n    const DB = (env as any)?.DB as D1Database;\n    if (!DB) return send({ error: \"D1 binding 'DB' missing\" }, 500);\n    const slug = String(params?.slug || \"\");\n\n    let body: any; try { body = await request.json(); } catch { return send({ error: \"Invalid JSON\" }, 400); }\n\n    const fields: string[] = [];\n    const binds: any[] = [];\n\n    if (typeof body.title === \"string\")                    { fields.push(\"title=?\"        + (fields.length+1)); binds.push(body.title.trim()); }\n    if (typeof body.body === \"string\" || body.body === null) { fields.push(\"body=?\"      + (fields.length+1)); binds.push(body.body ?? null); }\n    if (body.meta !== undefined)                           { fields.push(\"meta=?\"         + (fields.length+1)); binds.push(body.meta===null?null:JSON.stringify(body.meta)); }\n    if (typeof body.project_name === \"string\")             { fields.push(\"project_name=?\" + (fields.length+1)); binds.push(body.project_name.trim()); }\n    if (typeof body.subdomain === \"string\")                { fields.push(\"subdomain=?\"    + (fields.length+1)); binds.push(body.subdomain.trim()); }\n    if (typeof body.status === \"string\")                   { fields.push(\"status=?\"       + (fields.length+1)); binds.push(body.status.trim()); }\n\n    fields.push(\"updated_at=?\" + (fields.length+1)); binds.push(new Date().toISOString());\n    if (!fields.length) return send({ error: \"No updatable fields\" }, 400);\n\n    const sql = \"UPDATE templates SET \" + fields.join(\", \") + \" WHERE slug=?\" + (fields.length+1);\n    binds.push(slug);\n\n    const res = await DB.prepare(sql).bind(...binds).run();\n    if (res.meta.changes === 0) return send({ error: \"Not found\" }, 404);\n    return send({ ok: true });\n  } catch (e: any) {\n    return send({ error: \"Unhandled error (PATCH)\", detail: String(e?.message || e) }, 500);\n  }\n};\n", "// functions/api/ping.ts\nconst CORS: Record<string, string> = {\n  \"access-control-allow-origin\": \"*\",\n  \"access-control-allow-methods\": \"GET,POST,PATCH,OPTIONS\",\n  \"access-control-allow-headers\": \"content-type\",\n};\n\nexport const onRequestOptions: PagesFunction = async () =>\n  new Response(null, { status: 204, headers: CORS });\n\nexport const onRequestGet: PagesFunction = async () => {\n  const body = JSON.stringify({ ok: true, version: \"v3\" });\n  const headers = {\n    \"content-type\": \"application/json\",\n    ...CORS,\n    \"x-func-version\": \"v3\",\n  };\n  return new Response(body, { status: 200, headers });\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// package.json\nvar version = \"6.1.0\";\n\n// src/common/utils/build-pagination-query.ts\nfunction buildPaginationQuery(options) {\n  const searchParams = new URLSearchParams();\n  if (options.limit !== void 0) {\n    searchParams.set(\"limit\", options.limit.toString());\n  }\n  if (\"after\" in options && options.after !== void 0) {\n    searchParams.set(\"after\", options.after);\n  }\n  if (\"before\" in options && options.before !== void 0) {\n    searchParams.set(\"before\", options.before);\n  }\n  return searchParams.toString();\n}\n\n// src/api-keys/api-keys.ts\nvar ApiKeys = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        \"/api-keys\",\n        payload,\n        options\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/api-keys?${queryString}` : \"/api-keys\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/api-keys/${id}`\n      );\n      return data;\n    });\n  }\n};\n\n// src/audiences/audiences.ts\nvar Audiences = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        \"/audiences\",\n        payload,\n        options\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/audiences?${queryString}` : \"/audiences\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/audiences/${id}`\n      );\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/audiences/${id}`\n      );\n      return data;\n    });\n  }\n};\n\n// src/common/utils/parse-email-to-api-options.ts\nfunction parseAttachments(attachments) {\n  return attachments == null ? void 0 : attachments.map((attachment) => ({\n    content: attachment.content,\n    filename: attachment.filename,\n    path: attachment.path,\n    content_type: attachment.contentType,\n    content_id: attachment.contentId\n  }));\n}\nfunction parseEmailToApiOptions(email) {\n  return {\n    attachments: parseAttachments(email.attachments),\n    bcc: email.bcc,\n    cc: email.cc,\n    from: email.from,\n    headers: email.headers,\n    html: email.html,\n    reply_to: email.replyTo,\n    scheduled_at: email.scheduledAt,\n    subject: email.subject,\n    tags: email.tags,\n    text: email.text,\n    to: email.to\n  };\n}\n\n// src/render.ts\nfunction render(node) {\n  return new Promise((resolve, reject) => {\n    import(\"@react-email/render\").then(({ render: render2 }) => {\n      resolve(render2(node));\n    }).catch(() => {\n      reject(\n        Error(\n          \"Failed to render React component. Make sure to install `@react-email/render`\"\n        )\n      );\n    });\n  });\n}\n\n// src/batch/batch.ts\nvar Batch = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  send(payload, options) {\n    return __async(this, null, function* () {\n      return this.create(payload, options);\n    });\n  }\n  create(payload, options) {\n    return __async(this, null, function* () {\n      var _a;\n      const emails = [];\n      for (const email of payload) {\n        if (email.react) {\n          email.html = yield render(email.react);\n          email.react = void 0;\n        }\n        emails.push(parseEmailToApiOptions(email));\n      }\n      const data = yield this.resend.post(\n        \"/emails/batch\",\n        emails,\n        __spreadProps(__spreadValues({}, options), {\n          headers: __spreadValues({\n            \"x-batch-validation\": (_a = options == null ? void 0 : options.batchValidation) != null ? _a : \"strict\"\n          }, options == null ? void 0 : options.headers)\n        })\n      );\n      return data;\n    });\n  }\n};\n\n// src/broadcasts/broadcasts.ts\nvar Broadcasts = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      if (payload.react) {\n        payload.html = yield render(payload.react);\n      }\n      const data = yield this.resend.post(\n        \"/broadcasts\",\n        {\n          name: payload.name,\n          audience_id: payload.audienceId,\n          preview_text: payload.previewText,\n          from: payload.from,\n          html: payload.html,\n          reply_to: payload.replyTo,\n          subject: payload.subject,\n          text: payload.text\n        },\n        options\n      );\n      return data;\n    });\n  }\n  send(id, payload) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.post(\n        `/broadcasts/${id}/send`,\n        { scheduled_at: payload == null ? void 0 : payload.scheduledAt }\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/broadcasts?${queryString}` : \"/broadcasts\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/broadcasts/${id}`\n      );\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/broadcasts/${id}`\n      );\n      return data;\n    });\n  }\n  update(id, payload) {\n    return __async(this, null, function* () {\n      if (payload.react) {\n        payload.html = yield render(payload.react);\n      }\n      const data = yield this.resend.patch(\n        `/broadcasts/${id}`,\n        {\n          name: payload.name,\n          audience_id: payload.audienceId,\n          from: payload.from,\n          html: payload.html,\n          text: payload.text,\n          subject: payload.subject,\n          reply_to: payload.replyTo,\n          preview_text: payload.previewText\n        }\n      );\n      return data;\n    });\n  }\n};\n\n// src/contacts/contacts.ts\nvar Contacts = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        `/audiences/${payload.audienceId}/contacts`,\n        {\n          unsubscribed: payload.unsubscribed,\n          email: payload.email,\n          first_name: payload.firstName,\n          last_name: payload.lastName\n        },\n        options\n      );\n      return data;\n    });\n  }\n  list(options) {\n    return __async(this, null, function* () {\n      const _a = options, { audienceId } = _a, paginationOptions = __objRest(_a, [\"audienceId\"]);\n      const queryString = buildPaginationQuery(paginationOptions);\n      const url = queryString ? `/audiences/${audienceId}/contacts?${queryString}` : `/audiences/${audienceId}/contacts`;\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(options) {\n    return __async(this, null, function* () {\n      if (!options.id && !options.email) {\n        return {\n          data: null,\n          error: {\n            message: \"Missing `id` or `email` field.\",\n            name: \"missing_required_field\"\n          }\n        };\n      }\n      const data = yield this.resend.get(\n        `/audiences/${options.audienceId}/contacts/${(options == null ? void 0 : options.email) ? options == null ? void 0 : options.email : options == null ? void 0 : options.id}`\n      );\n      return data;\n    });\n  }\n  update(options) {\n    return __async(this, null, function* () {\n      if (!options.id && !options.email) {\n        return {\n          data: null,\n          error: {\n            message: \"Missing `id` or `email` field.\",\n            name: \"missing_required_field\"\n          }\n        };\n      }\n      const data = yield this.resend.patch(\n        `/audiences/${options.audienceId}/contacts/${(options == null ? void 0 : options.email) ? options == null ? void 0 : options.email : options == null ? void 0 : options.id}`,\n        {\n          unsubscribed: options.unsubscribed,\n          first_name: options.firstName,\n          last_name: options.lastName\n        }\n      );\n      return data;\n    });\n  }\n  remove(payload) {\n    return __async(this, null, function* () {\n      if (!payload.id && !payload.email) {\n        return {\n          data: null,\n          error: {\n            message: \"Missing `id` or `email` field.\",\n            name: \"missing_required_field\"\n          }\n        };\n      }\n      const data = yield this.resend.delete(\n        `/audiences/${payload.audienceId}/contacts/${(payload == null ? void 0 : payload.email) ? payload == null ? void 0 : payload.email : payload == null ? void 0 : payload.id}`\n      );\n      return data;\n    });\n  }\n};\n\n// src/common/utils/parse-domain-to-api-options.ts\nfunction parseDomainToApiOptions(domain) {\n  return {\n    name: domain.name,\n    region: domain.region,\n    custom_return_path: domain.customReturnPath\n  };\n}\n\n// src/domains/domains.ts\nvar Domains = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        \"/domains\",\n        parseDomainToApiOptions(payload),\n        options\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/domains?${queryString}` : \"/domains\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/domains/${id}`\n      );\n      return data;\n    });\n  }\n  update(payload) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.patch(\n        `/domains/${payload.id}`,\n        {\n          click_tracking: payload.clickTracking,\n          open_tracking: payload.openTracking,\n          tls: payload.tls\n        }\n      );\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/domains/${id}`\n      );\n      return data;\n    });\n  }\n  verify(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.post(\n        `/domains/${id}/verify`\n      );\n      return data;\n    });\n  }\n};\n\n// src/emails/emails.ts\nvar Emails = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  send(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      return this.create(payload, options);\n    });\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      if (payload.react) {\n        payload.html = yield render(payload.react);\n      }\n      const data = yield this.resend.post(\n        \"/emails\",\n        parseEmailToApiOptions(payload),\n        options\n      );\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/emails/${id}`\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/emails?${queryString}` : \"/emails\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  update(payload) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.patch(\n        `/emails/${payload.id}`,\n        {\n          scheduled_at: payload.scheduledAt\n        }\n      );\n      return data;\n    });\n  }\n  cancel(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.post(\n        `/emails/${id}/cancel`\n      );\n      return data;\n    });\n  }\n};\n\n// src/resend.ts\nvar defaultBaseUrl = \"https://api.resend.com\";\nvar defaultUserAgent = `resend-node:${version}`;\nvar baseUrl = typeof process !== \"undefined\" && process.env ? process.env.RESEND_BASE_URL || defaultBaseUrl : defaultBaseUrl;\nvar userAgent = typeof process !== \"undefined\" && process.env ? process.env.RESEND_USER_AGENT || defaultUserAgent : defaultUserAgent;\nvar Resend = class {\n  constructor(key) {\n    this.key = key;\n    this.apiKeys = new ApiKeys(this);\n    this.audiences = new Audiences(this);\n    this.batch = new Batch(this);\n    this.broadcasts = new Broadcasts(this);\n    this.contacts = new Contacts(this);\n    this.domains = new Domains(this);\n    this.emails = new Emails(this);\n    if (!key) {\n      if (typeof process !== \"undefined\" && process.env) {\n        this.key = process.env.RESEND_API_KEY;\n      }\n      if (!this.key) {\n        throw new Error(\n          'Missing API key. Pass it to the constructor `new Resend(\"re_123\")`'\n        );\n      }\n    }\n    this.headers = new Headers({\n      Authorization: `Bearer ${this.key}`,\n      \"User-Agent\": userAgent,\n      \"Content-Type\": \"application/json\"\n    });\n  }\n  fetchRequest(_0) {\n    return __async(this, arguments, function* (path, options = {}) {\n      try {\n        const response = yield fetch(`${baseUrl}${path}`, options);\n        if (!response.ok) {\n          try {\n            const rawError = yield response.text();\n            return { data: null, error: JSON.parse(rawError) };\n          } catch (err) {\n            if (err instanceof SyntaxError) {\n              return {\n                data: null,\n                error: {\n                  name: \"application_error\",\n                  message: \"Internal server error. We are unable to process your request right now, please try again later.\"\n                }\n              };\n            }\n            const error = {\n              message: response.statusText,\n              name: \"application_error\"\n            };\n            if (err instanceof Error) {\n              return { data: null, error: __spreadProps(__spreadValues({}, error), { message: err.message }) };\n            }\n            return { data: null, error };\n          }\n        }\n        const data = yield response.json();\n        return { data, error: null };\n      } catch (e) {\n        return {\n          data: null,\n          error: {\n            name: \"application_error\",\n            message: \"Unable to fetch data. The request could not be resolved.\"\n          }\n        };\n      }\n    });\n  }\n  post(_0, _1) {\n    return __async(this, arguments, function* (path, entity, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      if (options.idempotencyKey) {\n        headers.set(\"Idempotency-Key\", options.idempotencyKey);\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"POST\",\n        body: JSON.stringify(entity)\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  get(_0) {\n    return __async(this, arguments, function* (path, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"GET\"\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  put(_0, _1) {\n    return __async(this, arguments, function* (path, entity, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"PUT\",\n        body: JSON.stringify(entity)\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  patch(_0, _1) {\n    return __async(this, arguments, function* (path, entity, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"PATCH\",\n        body: JSON.stringify(entity)\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  delete(path, query) {\n    return __async(this, null, function* () {\n      const requestOptions = {\n        method: \"DELETE\",\n        body: JSON.stringify(query)\n      };\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n};\nexport {\n  Resend\n};\n", "// In: functions/api/send-email.ts\n\nimport { Resend } from 'resend';\n\n// Interfaccia per definire la struttura dei dati che ci aspettiamo dal frontend\ninterface EmailPayload {\n  name: string;\n  email: string;\n  message: string;\n  'cf-turnstile-response': string; // Token di Turnstile\n}\n\n// Interfaccia per definire la struttura delle variabili d'ambiente\ninterface Env {\n  RESEND_API_KEY: string;\n  TURNSTILE_SECRET_KEY: string;\n}\n\n// La funzione principale che viene eseguita da Cloudflare\nexport const onRequestPost: PagesFunction<Env> = async ({ request, env }) => {\n  try {\n    const payload: EmailPayload = await request.json();\n\n    // 1. Verifica del token di Turnstile\n    const turnstileSuccess = await verifyTurnstile(payload['cf-turnstile-response'], request.headers.get('CF-Connecting-IP'), env.TURNSTILE_SECRET_KEY);\n    \n    if (!turnstileSuccess) {\n      return new Response('Invalid Turnstile token.', { status: 401 });\n    }\n\n    // 2. Inizializzazione del client di Resend\n    const resend = new Resend(env.RESEND_API_KEY);\n\n    // 3. Invio dell'email\n    await resend.emails.send({\n      from: 'onboarding@resend.dev', // Indirizzo predefinito di Resend (non cambiarlo)\n      to: 'aldomalasomma@proton.me', // <-- MODIFICA QUI con la tua email verificata su Resend\n      subject: `New Contact Form Submission from ${payload.name}`,\n      html: `\n        <h1>New Message from your Portfolio</h1>\n        <p><strong>Name:</strong> ${payload.name}</p>\n        <p><strong>Email:</strong> ${payload.email}</p>\n        <hr>\n        <p><strong>Message:</strong></p>\n        <p>${payload.message}</p>\n      `,\n    });\n\n    // 4. Risposta di successo al frontend\n    return new Response('Email sent successfully!', { status: 200 });\n\n  } catch (error) {\n    console.error('Error sending email:', error);\n    return new Response('Failed to send email.', { status: 500 });\n  }\n};\n\n// Funzione helper per verificare il token di Turnstile\nasync function verifyTurnstile(token: string, ip: string | null, secretKey: string): Promise<boolean> {\n  const response = await fetch('https://challenges.cloudflare.com/turnstile/v0/siteverify', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      secret: secretKey,\n      response: token,\n      remoteip: ip,\n    } ),\n  });\n\n  const data = await response.json();\n  return data.success;\n}\n", "// /api/templates-v3 \u2014 GET list + POST create (forza versione e headers)\nconst send = (data: unknown, status = 200) =>\n  new Response(JSON.stringify(data), {\n    status,\n    headers: { \"content-type\": \"application/json\", \"X-Func-Version\": \"v3\" },\n  });\n\n// GET /api/templates-v3?limit=50&q=...\nexport const onRequestGet: PagesFunction = async ({ env, request }) => {\n  try {\n    const DB = (env as any)?.DB as D1Database;\n    if (!DB) return send({ version: \"v3\", error: \"D1 binding 'DB' missing\" }, 500);\n\n    const url = new URL(request.url);\n    const limitRaw = parseInt(url.searchParams.get(\"limit\") || \"50\", 10);\n    const limit = Number.isNaN(limitRaw) ? 50 : Math.min(Math.max(limitRaw, 1), 200);\n    const q = url.searchParams.get(\"q\");\n\n    let stmt: D1PreparedStatement;\n    if (q) {\n      stmt = DB.prepare(\n        \"SELECT slug, title, created_at FROM templates WHERE title LIKE ?1 ORDER BY created_at DESC LIMIT ?2\"\n      ).bind(\"%\" + q + \"%\", limit);\n    } else {\n      stmt = DB.prepare(\n        \"SELECT slug, title, created_at FROM templates ORDER BY created_at DESC LIMIT ?1\"\n      ).bind(limit);\n    }\n\n    const { results } = await stmt.all();\n    return send({ version: \"v3\", results: results ?? [] });\n  } catch (e: any) {\n    return send({ version: \"v3\", error: \"Unhandled error (GET)\", detail: String(e?.message || e) }, 500);\n  }\n};\n\n// POST /api/templates-v3\nexport const onRequestPost: PagesFunction = async ({ env, request }) => {\n  try {\n    const DB = (env as any)?.DB as D1Database;\n    if (!DB) return send({ version: \"v3\", error: \"D1 binding 'DB' missing\" }, 500);\n\n    let body: any;\n    try { body = await request.json(); } catch { return send({ version: \"v3\", error: \"Invalid JSON\" }, 400); }\n\n    const title = typeof body?.title === \"string\" ? body.title.trim() : \"\";\n    if (!title) return send({ version: \"v3\", error: \"Missing field: title\" }, 400);\n\n    // default univoci\n    const slug =\n      (typeof body.slug === \"string\" && body.slug.trim()) || crypto.randomUUID();\n    const projectName =\n      (typeof body.project_name === \"string\" && body.project_name.trim()) || slug;\n    const subdomain =\n      (typeof body.subdomain === \"string\" && body.subdomain.trim()) || slug;\n\n    const content = typeof body.body === \"string\" ? body.body : null;\n    const meta = body?.meta !== undefined ? JSON.stringify(body.meta) : null;\n\n    try {\n      await DB.prepare(\n        \"INSERT INTO templates (slug, title, project_name, subdomain, body, meta, updated_at) VALUES (?1, ?2, ?3, ?4, ?5, ?6, strftime('%Y-%m-%dT%H:%M:%fZ','now'))\"\n      ).bind(slug, title, projectName, subdomain, content, meta).run();\n    } catch (err: any) {\n      return send({ version: \"v3\", error: \"DB error (INSERT)\", detail: String(err?.message || err) }, 500);\n    }\n\n    return send({ version: \"v3\", ok: true, slug }, 201);\n  } catch (e: any) {\n    return send({ version: \"v3\", error: \"Unhandled error (POST)\", detail: String(e?.message || e) }, 500);\n  }\n};\n\n", "export const onRequest: PagesFunction = async ({ request }) => {\n  const email = request.headers.get(\"CF-Access-Authenticated-User-Email\") || \"n/a\";\n  const hasJWT = request.headers.get(\"CF-Access-Jwt-Assertion\") ? \"present\" : \"absent\";\n  return new Response(JSON.stringify({ email, jwt: hasJWT }, null, 2), {\n    headers: { \"content-type\": \"application/json\" },\n  });\n};\n", "export const onRequest: PagesFunction = async ({ request, env }) => {\n  const url = new URL(request.url);\n  const team = (env.CF_ACCESS_TEAM_DOMAIN || \"\").replace(/\\/$/, \"\"); // es: https://tuo-team.cloudflareaccess.com\n  const aud = env.CF_ACCESS_AUD || \"\";\n  if (!team || !aud) {\n    return new Response(\"Missing CF_ACCESS_TEAM_DOMAIN or CF_ACCESS_AUD\", { status: 500 });\n  }\n  const redirectURL = new URL(\"/admin/\", url.origin).toString();\n  const loginURL = `${team}/cdn-cgi/access/login?redirect_url=${encodeURIComponent(redirectURL)}&aud=${encodeURIComponent(aud)}`;\n  return new Response(null, { status: 302, headers: { Location: loginURL } });\n};\n", "export const onRequest: PagesFunction = async ({ env }) => {\n  const team = (env.CF_ACCESS_TEAM_DOMAIN || \"\").replace(/\\/$/, \"\");\n  const url = team ? `${team}/cdn-cgi/access/logout` : \"/\";\n  return new Response(null, { status: 302, headers: { Location: url } });\n};\n", "export const onRequestGet: PagesFunction = async () =>\n  new Response(\"ok\", { status: 200, headers: { \"content-type\": \"text/plain\" } });\n", "// functions/_middleware.ts\n\n// --- CORS condiviso ---\nconst CORS: Record<string, string> = {\n  \"access-control-allow-origin\": \"*\",\n  \"access-control-allow-methods\": \"GET,POST,PATCH,OPTIONS\",\n  \"access-control-allow-headers\": \"content-type\",\n};\n\n// preserva tutti gli header esistenti e aggiunge CORS + extra\nfunction withCors(res: Response, extra: Record<string, string> = {}): Response {\n  const headers = new Headers(res.headers);\n  for (const [k, v] of Object.entries(CORS)) headers.set(k, v);\n  for (const [k, v] of Object.entries(extra)) headers.set(k, v);\n  return new Response(res.body, { status: res.status, headers });\n}\n\nexport const onRequest: PagesFunction = async ({ request, next }) => {\n  const url = new URL(request.url);\n\n  // 1) Risposta immediata per OPTIONS (globale, prima di tutto)\n  if (request.method === \"OPTIONS\") {\n    return new Response(null, { status: 204, headers: CORS });\n  }\n\n  // 2) GATE /admin (logica esistente, invariata)\n  if (url.pathname.startsWith(\"/admin\")) {\n    // Pagine pubbliche sotto /admin\n    if (\n      url.pathname.startsWith(\"/admin/login\") ||\n      url.pathname.startsWith(\"/admin/logout\") ||\n      url.pathname.startsWith(\"/admin/_debug\")\n    ) {\n      const res = await next();\n      // anche per queste risposte, aggiungiamo CORS + versione\n      return withCors(res, { \"x-func-version\": \"v3\" });\n    }\n\n    // Se Access ha autenticato, avrai header o cookie\n    const hasHeader = !!request.headers.get(\"CF-Access-Jwt-Assertion\");\n    const hasCookie = (request.headers.get(\"Cookie\") || \"\").includes(\"CF_Authorization=\");\n\n    if (!hasHeader && !hasCookie) {\n      // redirect come prima, ma con CORS\n      return withCors(\n        new Response(null, { status: 302, headers: { Location: \"/admin/login\" } })\n      );\n    }\n\n    // gi\u00E0 autenticato \u2192 passa\n    const res = await next();\n    return withCors(res, { \"x-func-version\": \"v3\" });\n  }\n\n  // 3) Tutto il resto dell\u2019app (non /admin) \u2192 passa e aggiungi CORS + versione\n  const res = await next();\n  return withCors(res, { \"x-func-version\": \"v3\" });\n};\n", "import { onRequestGet as __api_templates__slug__demos_ts_onRequestGet } from \"/home/tosiek/copycodeai/functions/api/templates/[slug]/demos.ts\"\nimport { onRequestPost as __api_templates__slug__demos_ts_onRequestPost } from \"/home/tosiek/copycodeai/functions/api/templates/[slug]/demos.ts\"\nimport { onRequestGet as __api_templates__slug__ts_onRequestGet } from \"/home/tosiek/copycodeai/functions/api/templates/[slug].ts\"\nimport { onRequestPatch as __api_templates__slug__ts_onRequestPatch } from \"/home/tosiek/copycodeai/functions/api/templates/[slug].ts\"\nimport { onRequestGet as __api_ping_ts_onRequestGet } from \"/home/tosiek/copycodeai/functions/api/ping.ts\"\nimport { onRequestOptions as __api_ping_ts_onRequestOptions } from \"/home/tosiek/copycodeai/functions/api/ping.ts\"\nimport { onRequestPost as __api_send_email_ts_onRequestPost } from \"/home/tosiek/copycodeai/functions/api/send-email.ts\"\nimport { onRequestGet as __api_templates_index_ts_onRequestGet } from \"/home/tosiek/copycodeai/functions/api/templates/index.ts\"\nimport { onRequestPost as __api_templates_index_ts_onRequestPost } from \"/home/tosiek/copycodeai/functions/api/templates/index.ts\"\nimport { onRequest as __admin__debug_ts_onRequest } from \"/home/tosiek/copycodeai/functions/admin/_debug.ts\"\nimport { onRequest as __admin_login_ts_onRequest } from \"/home/tosiek/copycodeai/functions/admin/login.ts\"\nimport { onRequest as __admin_logout_ts_onRequest } from \"/home/tosiek/copycodeai/functions/admin/logout.ts\"\nimport { onRequestGet as __health_ts_onRequestGet } from \"/home/tosiek/copycodeai/functions/health.ts\"\nimport { onRequest as ___middleware_ts_onRequest } from \"/home/tosiek/copycodeai/functions/_middleware.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/templates/:slug/demos\",\n      mountPath: \"/api/templates/:slug\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_templates__slug__demos_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/templates/:slug/demos\",\n      mountPath: \"/api/templates/:slug\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_templates__slug__demos_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/templates/:slug\",\n      mountPath: \"/api/templates\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_templates__slug__ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/templates/:slug\",\n      mountPath: \"/api/templates\",\n      method: \"PATCH\",\n      middlewares: [],\n      modules: [__api_templates__slug__ts_onRequestPatch],\n    },\n  {\n      routePath: \"/api/ping\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_ping_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/ping\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_ping_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/send-email\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_send_email_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/templates\",\n      mountPath: \"/api/templates\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_templates_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/templates\",\n      mountPath: \"/api/templates\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_templates_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/admin/_debug\",\n      mountPath: \"/admin\",\n      method: \"\",\n      middlewares: [],\n      modules: [__admin__debug_ts_onRequest],\n    },\n  {\n      routePath: \"/admin/login\",\n      mountPath: \"/admin\",\n      method: \"\",\n      middlewares: [],\n      modules: [__admin_login_ts_onRequest],\n    },\n  {\n      routePath: \"/admin/logout\",\n      mountPath: \"/admin\",\n      method: \"\",\n      middlewares: [],\n      modules: [__admin_logout_ts_onRequest],\n    },\n  {\n      routePath: \"/health\",\n      mountPath: \"/\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__health_ts_onRequestGet],\n    },\n  {\n      routePath: \"/\",\n      mountPath: \"/\",\n      method: \"\",\n      middlewares: [___middleware_ts_onRequest],\n      modules: [],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/tosiek/copycodeai/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/tosiek/copycodeai/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/tosiek/copycodeai/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/tosiek/copycodeai/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/tosiek/copycodeai/.wrangler/tmp/bundle-aJFXMH/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/tosiek/copycodeai/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/tosiek/copycodeai/.wrangler/tmp/bundle-aJFXMH/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/tosiek/copycodeai/.wrangler/tmp/bundle-aJFXMH/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["send", "onRequestGet", "onRequestGet", "__defProp", "onRequestPost", "send", "onRequestGet", "onRequestPost", "onRequest", "onRequest", "onRequestGet", "CORS", "onRequest", "res", "onRequestGet", "onRequestPost", "onRequest", "value", "_a", "result", "char", "prefix", "i"]
}
